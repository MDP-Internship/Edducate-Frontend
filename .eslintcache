[{"D:\\projeler\\educateui\\src\\index.js":"1","D:\\projeler\\educateui\\src\\App.js":"2","D:\\projeler\\educateui\\src\\reportWebVitals.js":"3","D:\\projeler\\educateui\\src\\pages\\Login.js":"4","D:\\projeler\\educateui\\src\\store\\saga.js":"5","D:\\projeler\\educateui\\src\\store\\actions.js":"6","D:\\projeler\\educateui\\src\\store\\constants.js":"7","D:\\projeler\\educateui\\src\\commons\\constant.js":"8","D:\\projeler\\educateui\\src\\commons\\utils.js":"9","D:\\projeler\\educateui\\src\\commons\\helper.js":"10","D:\\projeler\\educateui\\src\\store\\reducer.js":"11","D:\\projeler\\educateui\\src\\store\\selectors.js":"12"},{"size":1635,"mtime":1608411896916,"results":"13","hashOfConfig":"14"},{"size":132,"mtime":1608207192327,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":4675,"mtime":1608306869908,"results":"17","hashOfConfig":"14"},{"size":1426,"mtime":1608414901198,"results":"18","hashOfConfig":"14"},{"size":897,"mtime":1608304216413,"results":"19","hashOfConfig":"14"},{"size":296,"mtime":1608304219711,"results":"20","hashOfConfig":"14"},{"size":104,"mtime":1608487756536,"results":"21","hashOfConfig":"14"},{"size":2099,"mtime":1608417362025,"results":"22","hashOfConfig":"14"},{"size":264,"mtime":1608287330852,"results":"23","hashOfConfig":"14"},{"size":678,"mtime":1608287818926,"results":"24","hashOfConfig":"14"},{"size":376,"mtime":1608286465135,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1nabdfn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"D:\\projeler\\educateui\\src\\index.js",["54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { persistReducer, persistStore, createTransform } from 'redux-persist';\nimport { Provider } from 'react-redux'\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport createSagaMiddleware from 'redux-saga';\n\nimport logger from 'redux-logger'\n\nimport reducers from './store/reducer'\nimport sagas from './store/saga'\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"token\", \"login\"]\n}\n\n//localstorage middleware redux\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\n//????\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n\n  persistedReducer,\n  composeEnhancer(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(logger)\n  )\n\n);\n\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(sagas)\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <PersistGate loading={<div>loading</div>} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["55","56"],"D:\\projeler\\educateui\\src\\App.js",[],"D:\\projeler\\educateui\\src\\reportWebVitals.js",[],"D:\\projeler\\educateui\\src\\pages\\Login.js",["57","58"],"import React from \"react\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectLogin } from '../store/selectors';\nimport { doLogin, forgotPassword, changePassword } from '../store/actions';\n\n//????\nimport PropTypes from 'prop-types';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            email: '',\n            password: '',\n            changePass: '',\n            changePassRepeat: '',\n        };\n        this.getChangePasswordToken();\n    }\n\n\n    getChangePasswordToken = () => {\n        let token = '';\n        if (window.location.href.includes('?')) {\n            token = window.location.href.substring(\n                window.location.href.lastIndexOf('?') + 1,\n                window.location.href.lastIndexOf('#'),\n            );\n        }\n        return token;\n    }\n\n    doLogin = () => {\n        this.props.doLogin(this.state.email, this.state.password)\n    }\n\n    handleValidSubmit = (event, values) => {\n        this.setState({ email: values.email });\n        console.log(`Login Successful`);\n    };\n\n    handleInvalidSubmit = (event, errors, values) => {\n        this.setState({ email: values.email, error: true });\n        console.log(`Login failed`);\n    };\n\n    render() {\n        return (\n            <Container className=\"\">\n                <Row className=\"\">\n                    <Col md=\"6\" className=\"mx-auto bg-white shadow-lg p-3 mt-5 bg-white rounded\">\n                        <h3>Login</h3>\n                        <AvForm\n                            onValidSubmit={this.handleValidSubmit}\n                            onInvalidSubmit={this.handleInvalidSubmit}\n                        >\n                            <AvField\n                                name=\"email\"\n                                value={this.state.email}\n                                label=\"Email\"\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                type=\"text\"\n                                validate={{\n                                    required: true,\n                                    email: true\n                                }}\n                            />\n                            <AvField\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                onChange={(e) => this.setState({ password: e.target.value })}\n                                value={this.state.password}\n                                validate={{\n                                    required: {\n                                        value: true,\n                                        errorMessage: \"Please enter your password\"\n                                    },\n                                    pattern: {\n                                        value: \"^[A-Za-z0-9]+$\",\n                                        errorMessage:\n                                            \"Your password must be composed only with letter and numbers\"\n                                    },\n                                    minLength: {\n                                        value: 6,\n                                        errorMessage: \"Your password must be between 6 and 16 characters\"\n                                    },\n                                    maxLength: {\n                                        value: 16,\n                                        errorMessage: \"Your password must be between 6 and 16 characters\"\n                                    }\n                                }}\n                            />\n                            <Button id=\"submit\" onClick={() => this.doLogin()}>Submit</Button>\n                        </AvForm>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    loginState: selectLogin()\n})\n\nconst mapDispatchToProps = dispatch => (\n    (\n      bindActionCreators({\n        doLogin,\n        // closeToast,\n        // setMenuVisible,\n      }, dispatch)\n    )\n  );\n//???\nLogin.propTypes = {\n    loginState: PropTypes.bool.isRequired,\n    doLogin: PropTypes.func.isRequired,\n    forgotPassword: PropTypes.func.isRequired,\n    changePassword: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","D:\\projeler\\educateui\\src\\store\\saga.js",[],"D:\\projeler\\educateui\\src\\store\\actions.js",[],"D:\\projeler\\educateui\\src\\store\\constants.js",[],"D:\\projeler\\educateui\\src\\commons\\constant.js",[],"D:\\projeler\\educateui\\src\\commons\\utils.js",[],"D:\\projeler\\educateui\\src\\commons\\helper.js",[],["59","60"],"D:\\projeler\\educateui\\src\\store\\reducer.js",[],"D:\\projeler\\educateui\\src\\store\\selectors.js",[],{"ruleId":"61","severity":1,"message":"62","line":7,"column":40,"nodeType":"63","messageId":"64","endLine":7,"endColumn":55},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":9,"column":19,"nodeType":"63","messageId":"64","endLine":9,"endColumn":33},{"ruleId":"61","severity":1,"message":"70","line":9,"column":35,"nodeType":"63","messageId":"64","endLine":9,"endColumn":49},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},"no-unused-vars","'createTransform' is defined but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'forgotPassword' is defined but never used.","'changePassword' is defined but never used.",["73"],["74"],"no-global-assign","no-unsafe-negation"]