[{"D:\\projeler\\educateui\\src\\index.js":"1","D:\\projeler\\educateui\\src\\App.js":"2","D:\\projeler\\educateui\\src\\reportWebVitals.js":"3","D:\\projeler\\educateui\\src\\store\\saga.js":"4","D:\\projeler\\educateui\\src\\store\\actions.js":"5","D:\\projeler\\educateui\\src\\store\\constants.js":"6","D:\\projeler\\educateui\\src\\commons\\constant.js":"7","D:\\projeler\\educateui\\src\\store\\reducer.js":"8","D:\\projeler\\educateui\\src\\store\\selectors.js":"9","D:\\projeler\\educateui\\src\\commons\\Routes.js":"10","D:\\projeler\\educateui\\src\\commons\\utils.js":"11","D:\\projeler\\educateui\\src\\commons\\helper.js":"12","D:\\projeler\\educateui\\src\\pages\\Login.js":"13","D:\\projeler\\educateui\\src\\pages\\Admin.js":"14","D:\\projeler\\educateui\\src\\pages\\Register.js":"15","D:\\projeler\\educateui\\src\\pages\\Home.js":"16","D:\\projeler\\educateui\\src\\components\\Header.js":"17","D:\\projeler\\educateui\\src\\components\\UserTables.js":"18"},{"size":1696,"mtime":1608540746140,"results":"19","hashOfConfig":"20"},{"size":1370,"mtime":1608542795679,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2898,"mtime":1608545238450,"results":"23","hashOfConfig":"20"},{"size":1247,"mtime":1608543283107,"results":"24","hashOfConfig":"20"},{"size":483,"mtime":1608543196608,"results":"25","hashOfConfig":"20"},{"size":157,"mtime":1608540746121,"results":"26","hashOfConfig":"20"},{"size":1019,"mtime":1608540746149,"results":"27","hashOfConfig":"20"},{"size":497,"mtime":1608540746151,"results":"28","hashOfConfig":"20"},{"size":532,"mtime":1608540746120,"results":"29","hashOfConfig":"20"},{"size":2010,"mtime":1608540746132,"results":"30","hashOfConfig":"20"},{"size":273,"mtime":1608540746123,"results":"31","hashOfConfig":"20"},{"size":4828,"mtime":1608540746145,"results":"32","hashOfConfig":"20"},{"size":357,"mtime":1608540746142,"results":"33","hashOfConfig":"20"},{"size":5788,"mtime":1608540746146,"results":"34","hashOfConfig":"20"},{"size":355,"mtime":1608540746144,"results":"35","hashOfConfig":"20"},{"size":2183,"mtime":1608544909757,"results":"36","hashOfConfig":"20"},{"size":1852,"mtime":1608540746136,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1nabdfn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\projeler\\educateui\\src\\index.js",["77"],"D:\\projeler\\educateui\\src\\App.js",[],"D:\\projeler\\educateui\\src\\reportWebVitals.js",[],["78","79"],"D:\\projeler\\educateui\\src\\store\\saga.js",[],"D:\\projeler\\educateui\\src\\store\\actions.js",[],"D:\\projeler\\educateui\\src\\store\\constants.js",[],"D:\\projeler\\educateui\\src\\commons\\constant.js",[],"D:\\projeler\\educateui\\src\\store\\reducer.js",[],"D:\\projeler\\educateui\\src\\store\\selectors.js",[],"D:\\projeler\\educateui\\src\\commons\\Routes.js",[],"D:\\projeler\\educateui\\src\\commons\\utils.js",[],"D:\\projeler\\educateui\\src\\commons\\helper.js",[],"D:\\projeler\\educateui\\src\\pages\\Login.js",["80","81"],"import React from \"react\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectLogin } from '../store/selectors';\nimport { doLogin, forgotPassword, changePassword } from '../store/actions';\n\n//????\nimport PropTypes from 'prop-types';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            email: '',\n            password: '',\n            changePass: '',\n            changePassRepeat: '',\n        };\n        this.getChangePasswordToken();\n    }\n\n\n    getChangePasswordToken = () => {\n        let token = '';\n        if (window.location.href.includes('?')) {\n            token = window.location.href.substring(\n                window.location.href.lastIndexOf('?') + 1,\n                window.location.href.lastIndexOf('#'),\n            );\n        }\n        return token;\n    }\n\n    doLogin = () => {\n        this.props.doLogin(this.state.email, this.state.password)\n    }\n\n    handleValidSubmit = (event, values) => {\n        this.setState({ email: values.email });\n        console.log(`Login Successful`);\n    };\n\n    handleInvalidSubmit = (event, errors, values) => {\n        this.setState({ email: values.email, error: true });\n        console.log(`Login failed`);\n    };\n\n    render() {\n        return (\n            <Container className=\"\">\n                <Row className=\"\">\n                    <Col md=\"6\" className=\"mx-auto bg-white shadow-lg p-3 mt-5 bg-white rounded\">\n                        <h3>Giriş Yap</h3>\n                        <AvForm\n                            onValidSubmit={this.handleValidSubmit}\n                            onInvalidSubmit={this.handleInvalidSubmit}\n                        >\n                            <AvField\n                                name=\"email\"\n                                value={this.state.email}\n                                label=\"Email\"\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                type=\"text\"\n                                validate={{\n                                    required: true,\n                                    email: true\n                                }}\n                            />\n                            <AvField\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                onChange={(e) => this.setState({ password: e.target.value })}\n                                value={this.state.password}\n                                validate={{\n                                    required: {\n                                        value: true,\n                                        errorMessage: \"Please enter your password\"\n                                    },\n                                    pattern: {\n                                        value: \"^[A-Za-z0-9]+$\",\n                                        errorMessage:\n                                            \"Your password must be composed only with letter and numbers\"\n                                    },\n                                    minLength: {\n                                        value: 6,\n                                        errorMessage: \"Your password must be between 6 and 16 characters\"\n                                    },\n                                    maxLength: {\n                                        value: 16,\n                                        errorMessage: \"Your password must be between 6 and 16 characters\"\n                                    }\n                                }}\n                            />\n                            <Button id=\"submit\" onClick={() => this.doLogin()}>Giriş Yap</Button>\n                        </AvForm>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    loginState: selectLogin()\n})\n\nconst mapDispatchToProps = dispatch => (\n    (\n        bindActionCreators({\n            doLogin,\n            // closeToast,\n            // setMenuVisible,\n        }, dispatch)\n    )\n);\n//???\nLogin.propTypes = {\n    loginState: PropTypes.bool.isRequired,\n    doLogin: PropTypes.func.isRequired,\n    forgotPassword: PropTypes.func.isRequired,\n    changePassword: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","D:\\projeler\\educateui\\src\\pages\\Admin.js",[],"D:\\projeler\\educateui\\src\\pages\\Register.js",["82","83","84","85"],"import React from \"react\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectLogin } from '../store/selectors';\nimport { doLogin, forgotPassword, changePassword } from '../store/actions';\n\n//????\nimport PropTypes from 'prop-types';\n\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            username: \"\",\n            mail: \"\",\n            password: \"\",\n\n        };\n        this.getChangePasswordToken();\n    }\n\n\n    getChangePasswordToken = () => {\n        let token = '';\n        if (window.location.href.includes('?')) {\n            token = window.location.href.substring(\n                window.location.href.lastIndexOf('?') + 1,\n                window.location.href.lastIndexOf('#'),\n            );\n        }\n        return token;\n    }\n\n    doLogin = () => {\n        this.props.doLogin(this.state.email, this.state.password)\n    }\n\n    handleValidSubmit = (event, values) => {\n        this.setState({ email: values.email });\n        console.log(`Login Successful`);\n    };\n\n    handleInvalidSubmit = (event, errors, values) => {\n        this.setState({ email: values.email, error: true });\n        console.log(`Login failed`);\n    };\n\n    render() {\n        return (\n            <Container className=\"\">\n                <Row className=\"\">\n                    <Col md=\"6\" className=\"mx-auto bg-white shadow-lg p-3 mt-5 bg-white rounded\">\n                        <h3>Kayıt Ol</h3>\n                        <AvForm\n                            onValidSubmit={this.handleValidSubmit}\n                            onInvalidSubmit={this.handleInvalidSubmit}\n                        >\n                            <AvField\n                                name=\"name\"\n                                value={this.state.name}\n                                label=\"İsim\"\n                                onChange={(e) => this.setState({ name: e.target.value })}\n                                type=\"text\"\n                                validate={{\n                                    required: true,\n                                }}\n                            />\n                            <AvField\n                                name=\"surname\"\n                                value={this.state.surname}\n                                label=\"Soyisim\"\n                                onChange={(e) => this.setState({ surname: e.target.value })}\n                                type=\"text\"\n                                validate={{\n                                    required: true,\n                                }}\n                            />\n                            <AvField\n                                name=\"email\"\n                                value={this.state.email}\n                                label=\"Email\"\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                type=\"text\"\n                                validate={{\n                                    required: true,\n                                    email: true\n                                }}\n                            />\n                            <AvField\n                                name=\"password\"\n                                label=\"Şifre\"\n                                type=\"password\"\n                                onChange={(e) => this.setState({ password: e.target.value })}\n                                value={this.state.password}\n                                validate={{\n                                    required: {\n                                        value: true,\n                                        errorMessage: \"Please enter your password\"\n                                    },\n                                    pattern: {\n                                        value: \"^[A-Za-z0-9]+$\",\n                                        errorMessage:\n                                            \"Your password must be composed only with letter and numbers\"\n                                    },\n                                    minLength: {\n                                        value: 6,\n                                        errorMessage: \"Your password must be between 6 and 16 characters\"\n                                    },\n                                    maxLength: {\n                                        value: 16,\n                                        errorMessage: \"Your password must be between 6 and 16 characters\"\n                                    }\n                                }}\n                            />\n                            <Button id=\"submit\" onClick={() => this.doLogin()}>Kayıt Ol</Button>\n                        </AvForm>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    // loginState: selectLogin()\n})\n\nconst mapDispatchToProps = dispatch => (\n    (\n        bindActionCreators({\n            // doLogin,\n            // closeToast,\n            // setMenuVisible,\n        }, dispatch)\n    )\n);\n\nRegister.propTypes = {\n    loginState: PropTypes.bool.isRequired,\n    doLogin: PropTypes.func.isRequired,\n    forgotPassword: PropTypes.func.isRequired,\n    changePassword: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","D:\\projeler\\educateui\\src\\pages\\Home.js",[],"D:\\projeler\\educateui\\src\\components\\Header.js",["86"],"D:\\projeler\\educateui\\src\\components\\UserTables.js",[],{"ruleId":"87","severity":1,"message":"88","line":7,"column":40,"nodeType":"89","messageId":"90","endLine":7,"endColumn":55},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":9,"column":19,"nodeType":"89","messageId":"90","endLine":9,"endColumn":33},{"ruleId":"87","severity":1,"message":"96","line":9,"column":35,"nodeType":"89","messageId":"90","endLine":9,"endColumn":49},{"ruleId":"87","severity":1,"message":"97","line":8,"column":10,"nodeType":"89","messageId":"90","endLine":8,"endColumn":21},{"ruleId":"87","severity":1,"message":"98","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":17},{"ruleId":"87","severity":1,"message":"95","line":9,"column":19,"nodeType":"89","messageId":"90","endLine":9,"endColumn":33},{"ruleId":"87","severity":1,"message":"96","line":9,"column":35,"nodeType":"89","messageId":"90","endLine":9,"endColumn":49},{"ruleId":"87","severity":1,"message":"99","line":17,"column":8,"nodeType":"89","messageId":"90","endLine":17,"endColumn":17},"no-unused-vars","'createTransform' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'forgotPassword' is defined but never used.","'changePassword' is defined but never used.","'selectLogin' is defined but never used.","'doLogin' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]